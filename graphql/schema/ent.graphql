"""
GroupWhereInput is used for filtering Group objects.
Input was generated by ent.
"""
input GroupWhereInput {
  not: GroupWhereInput
  and: [GroupWhereInput!]
  or: [GroupWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """users edge predicates"""
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  
  """parent edge predicates"""
  hasParent: Boolean
  hasParentWith: [GroupWhereInput!]
  
  """children edge predicates"""
  hasChildren: Boolean
  hasChildrenWith: [GroupWhereInput!]
  
  """namespaces edge predicates"""
  hasNamespaces: Boolean
  hasNamespacesWith: [NamespaceWhereInput!]
}

"""
InstallationWhereInput is used for filtering Installation objects.
Input was generated by ent.
"""
input InstallationWhereInput {
  not: InstallationWhereInput
  and: [InstallationWhereInput!]
  or: [InstallationWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """moduleVersion edge predicates"""
  hasModuleVersion: Boolean
  hasModuleVersionWith: [ModuleVersionWhereInput!]
}

"""
ModuleWhereInput is used for filtering Module objects.
Input was generated by ent.
"""
input ModuleWhereInput {
  not: ModuleWhereInput
  and: [ModuleWhereInput!]
  or: [ModuleWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """description field predicates"""
  description: String
  descriptionNEQ: String
  descriptionIn: [String!]
  descriptionNotIn: [String!]
  descriptionGT: String
  descriptionGTE: String
  descriptionLT: String
  descriptionLTE: String
  descriptionContains: String
  descriptionHasPrefix: String
  descriptionHasSuffix: String
  descriptionEqualFold: String
  descriptionContainsFold: String
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """namespace edge predicates"""
  hasNamespace: Boolean
  hasNamespaceWith: [NamespaceWhereInput!]
  
  """versions edge predicates"""
  hasVersions: Boolean
  hasVersionsWith: [ModuleVersionWhereInput!]
}

"""
ModuleVersionWhereInput is used for filtering ModuleVersion objects.
Input was generated by ent.
"""
input ModuleVersionWhereInput {
  not: ModuleVersionWhereInput
  and: [ModuleVersionWhereInput!]
  or: [ModuleVersionWhereInput!]
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """module edge predicates"""
  hasModule: Boolean
  hasModuleWith: [ModuleWhereInput!]
  
  """installations edge predicates"""
  hasInstallations: Boolean
  hasInstallationsWith: [InstallationWhereInput!]
}

"""
NamespaceWhereInput is used for filtering Namespace objects.
Input was generated by ent.
"""
input NamespaceWhereInput {
  not: NamespaceWhereInput
  and: [NamespaceWhereInput!]
  or: [NamespaceWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """groups edge predicates"""
  hasGroups: Boolean
  hasGroupsWith: [GroupWhereInput!]
  
  """users edge predicates"""
  hasUsers: Boolean
  hasUsersWith: [UserWhereInput!]
  
  """modules edge predicates"""
  hasModules: Boolean
  hasModulesWith: [ModuleWhereInput!]
  
  """installations edge predicates"""
  hasInstallations: Boolean
  hasInstallationsWith: [InstallationWhereInput!]
}

"""
UserWhereInput is used for filtering User objects.
Input was generated by ent.
"""
input UserWhereInput {
  not: UserWhereInput
  and: [UserWhereInput!]
  or: [UserWhereInput!]
  
  """name field predicates"""
  name: String
  nameNEQ: String
  nameIn: [String!]
  nameNotIn: [String!]
  nameGT: String
  nameGTE: String
  nameLT: String
  nameLTE: String
  nameContains: String
  nameHasPrefix: String
  nameHasSuffix: String
  nameEqualFold: String
  nameContainsFold: String
  
  """created_at field predicates"""
  createdAt: Time
  createdAtNEQ: Time
  createdAtIn: [Time!]
  createdAtNotIn: [Time!]
  createdAtGT: Time
  createdAtGTE: Time
  createdAtLT: Time
  createdAtLTE: Time
  
  """id field predicates"""
  id: ID
  idNEQ: ID
  idIn: [ID!]
  idNotIn: [ID!]
  idGT: ID
  idGTE: ID
  idLT: ID
  idLTE: ID
  
  """groups edge predicates"""
  hasGroups: Boolean
  hasGroupsWith: [GroupWhereInput!]
  
  """namespaces edge predicates"""
  hasNamespaces: Boolean
  hasNamespacesWith: [NamespaceWhereInput!]
}
