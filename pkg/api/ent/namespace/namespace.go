// Code generated by entc, DO NOT EDIT.

package namespace

import (
	"time"
)

const (
	// Label holds the string label denoting the namespace type in the database.
	Label = "namespace"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeGroups holds the string denoting the groups edge name in mutations.
	EdgeGroups = "groups"
	// EdgeUsers holds the string denoting the users edge name in mutations.
	EdgeUsers = "users"
	// EdgeModules holds the string denoting the modules edge name in mutations.
	EdgeModules = "modules"
	// EdgeInstallations holds the string denoting the installations edge name in mutations.
	EdgeInstallations = "installations"
	// Table holds the table name of the namespace in the database.
	Table = "namespaces"
	// GroupsTable is the table that holds the groups relation/edge. The primary key declared below.
	GroupsTable = "namespace_groups"
	// GroupsInverseTable is the table name for the Group entity.
	// It exists in this package in order to avoid circular dependency with the "group" package.
	GroupsInverseTable = "groups"
	// UsersTable is the table that holds the users relation/edge. The primary key declared below.
	UsersTable = "namespace_users"
	// UsersInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UsersInverseTable = "users"
	// ModulesTable is the table that holds the modules relation/edge.
	ModulesTable = "modules"
	// ModulesInverseTable is the table name for the Module entity.
	// It exists in this package in order to avoid circular dependency with the "module" package.
	ModulesInverseTable = "modules"
	// ModulesColumn is the table column denoting the modules relation/edge.
	ModulesColumn = "namespace_modules"
	// InstallationsTable is the table that holds the installations relation/edge.
	InstallationsTable = "installations"
	// InstallationsInverseTable is the table name for the Installation entity.
	// It exists in this package in order to avoid circular dependency with the "installation" package.
	InstallationsInverseTable = "installations"
	// InstallationsColumn is the table column denoting the installations relation/edge.
	InstallationsColumn = "namespace_installations"
)

// Columns holds all SQL columns for namespace fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldCreatedAt,
}

var (
	// GroupsPrimaryKey and GroupsColumn2 are the table columns denoting the
	// primary key for the groups relation (M2M).
	GroupsPrimaryKey = []string{"namespace_id", "group_id"}
	// UsersPrimaryKey and UsersColumn2 are the table columns denoting the
	// primary key for the users relation (M2M).
	UsersPrimaryKey = []string{"namespace_id", "user_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
